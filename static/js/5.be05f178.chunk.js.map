{"version":3,"sources":["components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","views/Home/components/MetricsSection/index.tsx","hooks/useTotalValueLocked.ts","views/Home/components/StarsEffect/index.tsx","views/Home/components/ColoredWordHeading.tsx","views/Home/components/NftsSection/index.tsx","views/Home/components/DaoSection/index.tsx","views/Home/components/WedgeSvgs.tsx","views/Home/index.tsx"],"names":["sharedStyles","theme","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","styled","Box","ConvexContainer","ConvexTop","width","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","div","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","backgroundColor","borderBottom","backgroundImage","getPadding","ChildrenWrapper","Container","mediaQueries","sm","lg","PageSection","children","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","props","StyledCard","Card","md","rotation","IconWrapper","IconCard","icon","borderColor","borderBackground","StatCardContent","headingText","bodyText","highlightColor","useMatchBreakpoints","isMobile","isTablet","isSmallerScreen","split","lastWord","pop","remainingWords","slice","length","join","minHeight","minWidth","flexDirection","justifyContent","mt","scale","color","mb","Stats","t","useTranslation","useTheme","usePollFarmsPublicData","useFetchPublicPoolsData","tvlString","farms","useFarms","data","pools","usePools","tvl","BigNumber","i","farm","farmLiquidity","lpTotalInQuoteToken","quoteTokenPriceBusd","times","isNaN","isFinite","plus","pool","poolLiquidity","stakingToken","stakingTokenPriceBusd","stakingTokenPrice","totalStaked","getBalanceAmount","multipliedBy","decimals","roundNumber","toNumber","useTotalValueLocked","burnedBalance","formatLocalisedCompactNumber","getBalanceNumber","useBurnedBalance","tokens","vani","address","BurnedCardData","StakedCardData","DoxedDevsCardData","alignItems","src","alt","textAlign","bold","mr","burned","secondary","OuterWedgeWrapper","StarsEffect","ColoredWordHeading","text","firstColor","firstWord","displayedColor","style","DescriptionWrapper","ImagesWrapper","NftsSection","flex","ml","alignSelf","whiteSpace","to","fontSize","external","href","position","top","left","DaoSection","InnerWedgeWrapper","fill","WedgeTopLeft","viewBox","preserveAspectRatio","Home","HomeSectionContainerStyles","margin","maxWidth","Page","MetricsSection","overflow"],"mappings":"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","file":"static/js/5.be05f178.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from 'uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = ( theme: DefaultTheme, clipPath: string, clipFill?: ClipFill ) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${ clipPath });\n\n  background: ${ () => {\n  if ( theme.isDark ) {\n    return clipFill?.dark || clipFill?.light || theme.colors.background\n  }\n  return clipFill?.light || theme.colors.background\n} };\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled( Box )<ContainerProps>`\n  ${ ( { theme, clipPath, clipFill } ) => sharedStyles( theme, clipPath, clipFill ) }\n  transform: ${ ( { clipPath } ) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)') };\n`\n\nconst ConvexContainer = styled( Box )<ContainerProps>`\n  ${ ( { theme, clipPath, clipFill } ) => sharedStyles( theme, clipPath, clipFill ) }\n  transform: ${ ( { clipPath } ) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)') };\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ( { clipFill } ) => (\n  <ConvexContainer clipFill={ clipFill } clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\"/>\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ( { clipFill } ) => (\n  <ConvexContainer clipFill={ clipFill } clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\"/>\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ( { clipFill } ) => (\n  <ConcaveContainer clipFill={ clipFill } clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\"/>\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ( { clipFill } ) => (\n  <ConcaveContainer clipFill={ clipFill } clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\"/>\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveBottom, ConcaveTop, ConvexBottom, ConvexTop } from './svg/CurvedSvg'\nimport { ClipFill, DividerFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\n\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${ ( { theme, dividerFill } ) => {\n  if ( theme.isDark ) {\n    return dividerFill?.dark || dividerFill?.light || 'none'\n  }\n  return dividerFill?.light || dividerFill?.dark || 'none'\n} };\n  z-index: ${ ( { index } ) => index };\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${ ( { index } ) => index + 1 };\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ( {\n                                                        index,\n                                                        dividerPosition,\n                                                        dividerComponent,\n                                                        concave,\n                                                        clipFill,\n                                                        dividerFill,\n                                                      } ) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        { showConcaveTop && <ConcaveTop clipFill={ clipFill }/> }\n        { showConcaveBottom && <ConcaveBottom clipFill={ clipFill }/> }\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        { showConvexTop && <ConvexTop clipFill={ clipFill }/> }\n        { showConvexBottom && <ConvexBottom clipFill={ clipFill }/> }\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={ index } dividerFill={ dividerFill }>\n      { dividerComponent && <ComponentWrapper index={ index }>{ dividerComponent }</ComponentWrapper> }\n      { getConcaveDivider() }\n      { getConvexDivider() }\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, FlexProps } from 'uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  backgroundColor?: string\n  backgroundImage?: string\n  getPadding?: () => string\n  borderBottom?: string\n}\n\nconst BackgroundColor = styled( Flex )<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${ ( { index } ) => index - 1 };\n  background: ${ ( { backgroundColor, theme } ) => backgroundColor || theme.colors.background };\n  \n  ${ ( { borderBottom } ) => borderBottom && (`\n      border-bottom: ${borderBottom};\n  `) };\n\n  ${ ( { backgroundImage } ) => backgroundImage && (`\n    background-image: url(${backgroundImage});\n    background-repeat: no-repeat;\n    background-size: cover;\n  `) };\n  padding: ${ ( { getPadding } ) => getPadding() };\n`\n\nconst ChildrenWrapper = styled( Container )`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${ ( { theme } ) => theme.mediaQueries.sm } {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${ ( { theme } ) => theme.mediaQueries.lg } {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ( {\n                                                    children,\n                                                    backgroundColor,\n                                                    svgFill,\n                                                    index = 1,\n                                                    dividerComponent,\n                                                    dividerPosition = 'bottom',\n                                                    hasCurvedDivider = true,\n                                                    concaveDivider = false,\n                                                    clipFill,\n                                                    dividerFill,\n                                                    containerProps,\n                                                    innerProps,\n                                                    ...props\n                                                  } ) => {\n  const getPadding = () => {\n    // No curved divider\n    if ( !hasCurvedDivider ) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if ( dividerPosition === 'bottom' ) {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if ( dividerPosition === 'top' ) {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box { ...containerProps }>\n      { hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={ svgFill }\n          index={ index }\n          concave={ concaveDivider }\n          dividerPosition={ dividerPosition }\n          dividerComponent={ dividerComponent }\n          clipFill={ clipFill }\n          dividerFill={ dividerFill }\n        />\n      ) }\n      <BackgroundColor backgroundColor={ backgroundColor } index={ index } getPadding={ getPadding } { ...props }>\n        <ChildrenWrapper { ...innerProps }>{ children }</ChildrenWrapper>\n      </BackgroundColor>\n      { hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={ svgFill }\n          index={ index }\n          concave={ concaveDivider }\n          dividerPosition={ dividerPosition }\n          dividerComponent={ dividerComponent }\n          clipFill={ clipFill }\n          dividerFill={ dividerFill }\n        />\n      ) }\n    </Box>\n  )\n}\n\nexport default PageSection\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Box, Card, CardBody, CardProps } from 'uikit'\n\nconst StyledCard = styled( Card )<{ background: string; rotation?: string }>`\n  height: fit-content;\n  padding: 1px 1px 4px 1px;\n  box-sizing: border-box;\n\n  ${ ( { theme } ) => theme.mediaQueries.md } {\n    ${ ( { rotation } ) => (rotation ? `transform: rotate(${ rotation });` : '') }\n  }\n`\n\nconst IconWrapper = styled( Box )<{ rotation?: string }>`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n\n  ${ ( { theme } ) => theme.mediaQueries.md } {\n    ${ ( { rotation } ) => (rotation ? `transform: rotate(${ rotation });` : '') }\n  }\n`\n\ninterface IconCardProps extends IconCardData, CardProps {\n  children: ReactNode\n}\n\nexport interface IconCardData {\n  icon: ReactNode\n  background?: string\n  borderColor?: string\n  rotation?: string\n}\n\nconst IconCard: React.FC<IconCardProps> = ( { icon, background, borderColor, rotation, children, ...props } ) => {\n  return (\n    <StyledCard background={ background } borderBackground={ borderColor } rotation={ rotation } { ...props }>\n      <CardBody>\n        <IconWrapper rotation={ rotation }>{ icon }</IconWrapper>\n        { children }\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default IconCard\n","import React from 'react'\nimport { Flex, Heading, Text, useMatchBreakpoints } from 'uikit'\n\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ( {\n                                                                                                         headingText,\n                                                                                                         bodyText,\n                                                                                                         highlightColor,\n                                                                                                       } ) => {\n  const { isMobile, isTablet } = useMatchBreakpoints()\n  const isSmallerScreen = isMobile || isTablet\n  const split = headingText.split( ' ' )\n  const lastWord = split.pop()\n  const remainingWords = split.slice( 0, split.length ).join( ' ' )\n\n  return (\n    <Flex\n      minHeight={ [ null, null, null, '168px' ] }\n      minWidth=\"232px\"\n      width=\"fit-content\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-end\"\n      mt={ [ null, null, null, '64px' ] }\n    >\n      { isSmallerScreen && remainingWords.length > 13 ? (\n        <Heading scale=\"lg\">{ remainingWords }</Heading>\n      ) : (\n        <Heading scale=\"xl\">{ remainingWords }</Heading>\n      ) }\n      <Heading color={ highlightColor } scale=\"xl\" mb=\"24px\">\n        { lastWord }\n      </Heading>\n      <Text color=\"textSubtle\">{ bodyText }</Text>\n    </Flex>\n  )\n}\n\nexport default StatCardContent\n","import React from 'react';\nimport { ChartIcon, CommunityIcon, FireIcon, Flex, Heading, Image, Text } from 'uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport { formatLocalisedCompactNumber, getBalanceNumber } from 'utils/formatBalance';\nimport { usePollFarmsPublicData } from 'state/farms/hooks';\nimport { useFetchPublicPoolsData } from 'state/pools/hooks';\nimport { useTotalValueLocked } from 'hooks/useTotalValueLocked';\nimport { useBurnedBalance } from 'hooks/useTokenBalance';\nimport tokens from 'config/constants/tokens';\nimport IconCard, { IconCardData } from '../IconCard';\nimport StatCardContent from './StatCardContent';\n\nconst Stats = () => {\n    const { t } = useTranslation();\n    const { theme } = useTheme();\n\n    usePollFarmsPublicData();\n    useFetchPublicPoolsData();\n\n    const totalValueLocked = useTotalValueLocked();\n    const tvlString = totalValueLocked || '_';\n\n    const burnedBalance = formatLocalisedCompactNumber( getBalanceNumber( useBurnedBalance( tokens.vani.address ) ) );\n\n    const BurnedCardData: IconCardData = {\n        icon: <FireIcon color=\"secondary\" width=\"36px\"/>,\n    };\n\n    const StakedCardData: IconCardData = {\n        icon: <ChartIcon color=\"secondary\" width=\"36px\"/>,\n    };\n\n    const DoxedDevsCardData: IconCardData = {\n        icon: <CommunityIcon color=\"secondary\" width=\"36px\"/>,\n    };\n\n    return (\n        <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n            <Image src=\"/images/logo/logo-vertical.svg\" alt=\"IceCream\" width={ 110 } height={ 110 }/>\n            <Heading textAlign=\"center\" scale=\"xl\" mt=\"24px\" mb=\"32px\" color=\"#ffffff\">\n                { t( 'Audit and Certified.' ) }\n            </Heading>\n\n            <Text textAlign=\"center\" color=\"#feb5ff\">\n                { t( 'Tried & True. Icecream in wake to become a decentralized autonomous organization with a resilient user base.' ) }\n            </Text>\n\n            <Text textAlign=\"center\" color=\"#feb5ff\" bold mb=\"32px\">\n                { t( 'Get in line' ) }\n            </Text>\n\n            <Flex flexDirection={ [ 'column', null, null, 'row' ] }>\n                <IconCard { ...BurnedCardData } mr={ [ null, null, null, '16px' ] } mb={ [ '16px', null, null, '0' ] }>\n                    <StatCardContent\n                        headingText={ t( '%burned% burned', { burned: burnedBalance } ) }\n                        bodyText={ t( 'Total of burned VANI' ) }\n                        highlightColor={ theme.colors.secondary }\n                    />\n                </IconCard>\n                <IconCard { ...StakedCardData } mr={ [ null, null, null, '16px' ] }>\n                    <StatCardContent\n                        headingText={ t( '$%tvl% staked', { tvl: tvlString } ) }\n                        bodyText={ t( 'Total Value Locked' ) }\n                        highlightColor={ theme.colors.secondary }\n                    />\n                </IconCard>\n                <IconCard { ...DoxedDevsCardData } mb={ [ '16px', null, null, '0' ] }>\n                    <StatCardContent\n                        headingText={ t( 'doxed devs' ) }\n                        bodyText={ t( 'check them out here' ) }\n                        highlightColor={ theme.colors.secondary }\n                    />\n                </IconCard>\n            </Flex>\n        </Flex>\n    );\n};\n\nexport default Stats;\n","import BigNumber from 'bignumber.js'\nimport { usePools } from '../state/pools/hooks'\nimport { useFarms } from '../state/farms/hooks'\nimport { getBalanceAmount, roundNumber } from '../utils/formatBalance'\n\nexport const useTotalValueLocked = (): number => {\n  const { data: farms } = useFarms()\n  const { pools } = usePools()\n\n  let tvl = new BigNumber( 0 )\n\n  for ( let i = 0; i < farms.length; i++ ) {\n    const farm = farms[i]\n    let farmLiquidity = new BigNumber( 0 )\n\n    if ( farm.lpTotalInQuoteToken ) {\n      if ( farm.quoteTokenPriceBusd ) {\n        farmLiquidity = new BigNumber( farm.lpTotalInQuoteToken ).times( farm.quoteTokenPriceBusd )\n      } else {\n        farmLiquidity = farm.lpTotalInQuoteToken\n      }\n    }\n\n    if ( !farmLiquidity.isNaN() && farmLiquidity.isFinite() ) {\n      tvl = tvl.plus( farmLiquidity )\n    }\n  }\n\n  for ( let i = 0; i < pools.length; i++ ) {\n    const pool = pools[i]\n    let poolLiquidity = null\n\n    const { stakingToken, stakingTokenPrice: stakingTokenPriceBusd, totalStaked } = pool\n\n    if ( totalStaked?.isFinite() && stakingTokenPriceBusd ) {\n      poolLiquidity = getBalanceAmount(\n        new BigNumber( pool.totalStaked ).multipliedBy( stakingTokenPriceBusd ),\n        stakingToken.decimals,\n      )\n\n      if ( !poolLiquidity.isNaN() && poolLiquidity.isFinite() ) {\n        tvl = tvl.plus( poolLiquidity )\n      }\n    }\n  }\n\n  return roundNumber( tvl.toNumber(), 2 );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport './stars-effect.css';\n\nconst OuterWedgeWrapper = styled.div`\n  z-index: -2;\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  right: 0px;\n  top: 0px;\n`\n\nconst StarsEffect: React.FC = () => {\n    return (\n        <OuterWedgeWrapper>\n            <div id=\"stars\" />\n            <div id=\"stars2\" />\n            <div id=\"stars3\" />\n        </OuterWedgeWrapper>\n    )\n}\n\nexport default StarsEffect;","import React from 'react'\nimport { Colors, Heading, TextProps } from 'uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface HeadingProps extends TextProps {\n  text: string\n  firstColor?: keyof Colors\n}\n\nconst ColoredWordHeading: React.FC<HeadingProps> = ( { text, firstColor, mb = '24px', ...props } ) => {\n  const { theme } = useTheme()\n  const split = text.split( ' ' )\n  const firstWord = split[0]\n  const remainingWords = split.slice( 1 ).join( ' ' )\n  const displayedColor = (theme.colors[firstColor] as string) ?? theme.colors.secondary\n\n  return (\n    <Heading scale=\"xl\" mb={ mb } { ...props }>\n      <span style={ { color: displayedColor } }>{ firstWord } </span>\n      { remainingWords }\n    </Heading>\n  )\n}\n\nexport default ColoredWordHeading\n","import React from 'react';\nimport { Button, Flex, Link, Text } from 'uikit';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useTranslation } from 'contexts/Localization';\nimport styled from 'styled-components';\nimport ColoredWordHeading from '../ColoredWordHeading';\n\nconst DescriptionWrapper = styled( Flex )`\n    width: 100%;\n    margin-top: 2rem;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    \n    ${ ( { theme } ) => theme.mediaQueries.md } {\n        text-align: left;\n        margin-top: 0;\n    }\n`;\n\nconst ImagesWrapper = styled( Flex )`\n    position: relative;\n    width: 50%;\n    margin: 2rem auto;\n    \n    ${ ( { theme } ) => theme.mediaQueries.md } {\n        margin: 0 0 0 3rem;\n    }\n`;\n\nconst NftsSection: React.FC = () => {\n    const { t } = useTranslation();\n\n    return (\n        <Flex\n            flexDirection={ [ 'column-reverse', null, null, 'row' ] }\n            alignItems={ [ 'flex-end', null, null, 'center' ] }\n            justifyContent=\"center\"\n            minHeight={ 400 }\n        >\n            <DescriptionWrapper\n                flexDirection=\"column\"\n                flex=\"1\"\n                ml={ [ null, null, null, null ] }\n                mr={ [ null, null, null, '64px' ] }\n                alignSelf={ [ 'flex-start', null, null, 'center' ] }\n            >\n                <ColoredWordHeading text={ t( 'NFT\\'s Reimagined.' ) }/>\n                <Text color=\"textSubtle\" mb=\"24px\" style={ { whiteSpace: 'pre-wrap' } }>\n                    { t( 'Unique design incorporating the best amongst the blockchain universe and in Development' ) }\n                </Text>\n                <Flex>\n                    <Button mr=\"16px\">\n                        <RouterLink to='/nfts'>\n                            <Text color=\"card\" bold fontSize=\"16px\">\n                                { t( 'Check out' ) }\n                            </Text>\n                        </RouterLink>\n                    </Button>\n                    <Link external href='https://docs.pancakeswap.finance/'>\n                        { t( 'Learn' ) }\n                    </Link>\n                </Flex>\n            </DescriptionWrapper>\n            <ImagesWrapper>\n                <img src='/images/home/nfts/shop.png' alt='Shop'/>\n                <img src='/images/home/nfts/coin.gif' alt='Coin' style={ { position: 'absolute', top: 27, left: -24 } }/>\n            </ImagesWrapper>\n        </Flex>\n    );\n};\n\nexport default NftsSection;\n","import React from 'react';\nimport { Button, Flex, Link, Text } from 'uikit';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useTranslation } from 'contexts/Localization';\nimport styled from 'styled-components';\nimport ColoredWordHeading from '../ColoredWordHeading';\n\nconst DescriptionWrapper = styled( Flex )`\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    width: 100%;\n    text-shadow: #000000cc 0px 0 7px;\n    \n    ${ ( { theme } ) => theme.mediaQueries.md } {\n        width: 50%;\n        margin-left: 50%;\n        align-items: flex-start;\n        margin-left: 50%;\n        text-shadow: #00000033 0px 0 4px;\n        text-align: left;\n    }\n`;\n\nconst DaoSection: React.FC = () => {\n    const { t } = useTranslation();\n\n    return (\n        <DescriptionWrapper minHeight={ 380 }>\n            <ColoredWordHeading text={ t( 'DAO.' ) }/>\n            <Text color=\"textSubtle\" mb=\"24px\" style={ { whiteSpace: 'pre-wrap' } }>\n                { t( 'Community engagement has never had a better place. VANI for association.\\nDecisiveness is for the decentralized.' ) }\n            </Text>\n            <Flex>\n                <Button mr=\"16px\">\n                    <RouterLink to='/nfts'>\n                        <Text color=\"card\" bold fontSize=\"16px\">\n                            { t( 'Check out' ) }\n                        </Text>\n                    </RouterLink>\n                </Button>\n                <Link external href='https://docs.pancakeswap.finance/'>\n                    { t( 'Learn' ) }\n                </Link>\n            </Flex>\n        </DescriptionWrapper>\n    );\n};\n\nexport default DaoSection;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Svg, SvgProps } from 'uikit'\n\nexport const OuterWedgeWrapper = styled.div`\n  z-index: -1;\n  overflow: hidden;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  right: 0px;\n  top: 0px;\n`\n\nexport const InnerWedgeWrapper = styled.div<{ fill: string; top?: boolean; width?: string }>`\n  position: absolute;\n  display: flex;\n  width: 100%;\n  ${ ( { top } ) => (top ? 'top: 0px' : 'bottom: 0px') };\n\n  svg {\n    fill: ${ ( { fill } ) => fill };\n    width: ${ ( { width } ) => width || '100%' };\n    height: 100%;\n    max-height: 48px;\n  }\n`\n\nexport const WedgeTopLeft: React.FC<SvgProps> = ( props ) => {\n  return (\n    <Svg viewBox=\"0 0 1660 48\" { ...props } preserveAspectRatio=\"none\">\n      <path d=\"M1660 48C1139.02 46.1887 336.256 15.2453 0 0H1660V48Z\"/>\n    </Svg>\n  )\n}\n\nexport const WedgeTopRight: React.FC<SvgProps> = ( props ) => {\n  return (\n    <Svg viewBox=\"0 0 1660 48\" { ...props } preserveAspectRatio=\"none\">\n      <path d=\"M-346 48C174.985 46.1887 977.744 15.2453 1314 0H-346V48Z\"/>\n    </Svg>\n  )\n}\n\nexport const WedgeBottomRight: React.FC<SvgProps> = ( props ) => {\n  return (\n    <Svg viewBox=\"0 0 1660 48\" { ...props } preserveAspectRatio=\"none\">\n      <path d=\"M0 0C520.985 1.81132 1323.74 32.7547 1660 48H0V0Z\"/>\n    </Svg>\n  )\n}\n\nexport const WedgeBottomLeft: React.FC<SvgProps> = ( props ) => {\n  return (\n    <Svg viewBox=\"0 0 1660 48\" { ...props } preserveAspectRatio=\"none\">\n      <path d=\"M1660 0C1139.02 1.81132 336.256 32.7547 0 48H1660V0Z\"/>\n    </Svg>\n  )\n}\n","import React from 'react';\nimport PageSection from 'components/PageSection';\nimport useTheme from 'hooks/useTheme';\nimport { PageMeta } from 'components/Layout/Page';\nimport MetricsSection from './components/MetricsSection';\nimport StarsEffect from './components/StarsEffect';\nimport NftsSection from './components/NftsSection';\nimport DaoSection from './components/DaoSection';\nimport { InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopLeft } from './components/WedgeSvgs';\n\nconst Home: React.FC = () => {\n    const { theme } = useTheme();\n\n    const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' };\n\n    return (\n        <>\n            <PageMeta/>\n            <PageSection\n                innerProps={ { style: { margin: '0', width: '100%' } } }\n                backgroundColor={\n                    theme.isDark\n                        ? 'linear-gradient(180deg, #590059 22%, #280028 100%)'\n                        : 'linear-gradient(180deg, #c76ec9 22%, #8b0a8b 100%)'\n                }\n                index={ 2 }\n                hasCurvedDivider={ false }\n            >\n                <MetricsSection/>\n            </PageSection>\n\n            <PageSection\n                innerProps={ { style: { ...HomeSectionContainerStyles, overflow: 'hidden' } } }\n                backgroundImage='radial-gradient(ellipse at bottom, #301236 0%, #090a0f 100%);'\n                borderBottom='1px solid #ffffff11'\n                index={ 2 }\n                hasCurvedDivider={ false }\n            >\n                <OuterWedgeWrapper>\n                    <InnerWedgeWrapper top fill={ theme.isDark ? '#280028' : '#8b0a8b' }>\n                        <WedgeTopLeft/>\n                    </InnerWedgeWrapper>\n                </OuterWedgeWrapper>\n                <StarsEffect/>\n                <NftsSection/>\n            </PageSection>\n\n            <PageSection\n                innerProps={ { style: HomeSectionContainerStyles } }\n                backgroundImage='/images/home/dao/background.png'\n                backgroundColor='#000000'\n                borderBottom='6px solid black'\n                index={ 3 }\n                hasCurvedDivider={ false }\n            >\n                <DaoSection/>\n            </PageSection>\n        </>\n    );\n};\n\nexport default Home;\n"],"sourceRoot":""}